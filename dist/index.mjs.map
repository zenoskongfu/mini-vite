{"version":3,"sources":["../src/node/cli.ts","../src/node/server/index.ts","../src/node/optimizer/index.ts","../src/node/constant.ts","../src/node/optimizer/scanPlugin.ts","../src/node/optimizer/preBundlePlugin.ts","../src/node/utils.ts"],"sourcesContent":["import cac from \"cac\";\nimport { startDevServer } from \"./server\";\n\nconst cli = cac();\n\n// ÂèØ‰ª•Âú®‰∏çËæìÂÖ•ÂëΩ‰ª§ÁöÑÊÉÖÂÜµ‰∏ãÔºåÂØπoptionsËøõË°åÈôêÂà∂\n// ÂèØÈÄâÁöÑÂëΩ‰ª§ÂèÇÊï∞ÔºåÂèØ‰ª•Ë¢´actionÊçïËé∑Ôºü\ncli.command(\"[root]\", \"Run the development server\")\n\t.alias(\"serve\")\n\t.alias(\"dev\")\n\t.option(\"--entry, --entryPath <path>\", \"input entry path\")\n\t.action(async (command, options) => {\n\t\tawait startDevServer(options.entry || \"src/index.ts\");\n\t});\n\ncli.help();\n\ncli.parse();\n","import connect from \"connect\";\nimport picocolors from \"picocolors\";\nimport { optimize } from \"../optimizer\";\n\nexport async function startDevServer(entryPath: string) {\n\tconst app = connect();\n\tconst root = process.cwd();\n\n\tconst startTime = Date.now();\n\n\tapp.listen(3000, async () => {\n\t\tawait optimize(root, entryPath);\n\t\tconsole.log(picocolors.green(\"üöÄ No-Bundle ÊúçÂä°Â∑≤ÁªèÊàêÂäüÂêØÂä®!\"), `ËÄóÊó∂: ${Date.now() - startTime}ms`);\n\n\t\tconsole.log(`> Êú¨Âú∞ËÆøÈóÆË∑ØÂæÑÔºö ${picocolors.blue(\"http://localhost:3000\")}`);\n\t});\n}\n","import { build } from \"esbuild\";\nimport path from \"path\";\nimport { scanPlugin } from \"./scanPlugin\";\nimport picocolors from \"picocolors\";\nimport { preBundlePlugin } from \"./preBundlePlugin\";\nimport { PRE_BUNDLE_DIR } from \"../constant\";\n\n// bing apply call\nexport async function optimize(root: string, entryPath: string) {\n\tconst entry = path.resolve(root, entryPath);\n\tconst deps = new Set<string>();\n\n\tawait build({\n\t\tentryPoints: [entry],\n\t\tbundle: true,\n\t\twrite: false,\n\t\tplugins: [scanPlugin(deps)],\n\t});\n\n\tconsole.log(\n\t\t`${picocolors.green(\"ÈúÄË¶ÅÈ¢ÑÊûÑÂª∫ÁöÑ‰æùËµñ\")}:\\n${[...deps]\n\t\t\t.map(picocolors.green)\n\t\t\t.map((item) => ` ${item}`)\n\t\t\t.join(\"\\n\")}`\n\t);\n\n\t// Â∞ÜÊûÑÂª∫‰∫ßÁâ©ÊîæÂà∞ÊåáÂÆöÁõÆÂΩïÔºåÁõÆÁöÑÊòØÂ∞ÜÊûÑÂª∫‰∫ßÁâ©ÂèòÊàêesmÂèØ‰ª•ËØªÂèñÁöÑÊ®°Âºè\n\tconst meta = await build({\n\t\tentryPoints: [...deps],\n\t\twrite: true,\n\t\tbundle: true,\n\t\tformat: \"esm\",\n\t\tsplitting: true,\n\t\tmetafile: true,\n\t\toutdir: path.resolve(root, PRE_BUNDLE_DIR),\n\t\tplugins: [preBundlePlugin(deps)],\n\t});\n\n\t// console.log(meta);\n}\n","import path from \"path\";\nexport const EXTERNAL_TYPES = [\"css\", \"less\", \"sass\", \"scss\", \"vue\", \"png\", \"jpeg\", \"jpg\", \"gif\", \"svg\", \"ico\"];\n\nexport const BARE_IMPORT_RE = /^[\\w@][^:]/; //Á¨¨‰∫å‰∏™‰∏çÊòØÂÜíÂè∑ÔºåÊéíÈô§C:ËøôÁßçÁ±ªÂûãÁöÑË∑ØÂæÑ\n\nexport const PRE_BUNDLE_DIR = path.join(\"node_modules\", \".m-vite\"); // ÈªòËÆ§ÊîæÂú®node_modules‰∏ãÈù¢ÁöÑ.m-vite‰∏≠\n","import { Plugin } from \"esbuild\";\nimport { BARE_IMPORT_RE, EXTERNAL_TYPES } from \"../constant\";\n\nexport function scanPlugin(deps: Set<string>): Plugin {\n\treturn {\n\t\tname: \"esbuild: scan-plugin\",\n\t\tsetup(build) {\n\t\t\t// ÂøΩÁï•ÊûÑÂª∫ÁöÑÊñá‰ª∂Á±ªÂûã\n\t\t\tbuild.onResolve(\n\t\t\t\t{\n\t\t\t\t\tfilter: new RegExp(`\\\\.(${EXTERNAL_TYPES.join(\"|\")})`),\n\t\t\t\t},\n\t\t\t\t(resolveInfo) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tpath: resolveInfo.path,\n\t\t\t\t\t\texternal: true,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// ËÆ∞ÂΩï‰æùËµñ\n\t\t\tbuild.onResolve({ filter: BARE_IMPORT_RE }, (resolveInfo) => {\n\t\t\t\tconst { path: id } = resolveInfo;\n\t\t\t\tdeps.add(id);\n\t\t\t\treturn {\n\t\t\t\t\tpath: id,\n\t\t\t\t\texternal: true,\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t};\n}\n","import { Loader, Plugin } from \"esbuild\";\nimport { BARE_IMPORT_RE } from \"../constant\";\nimport resolve from \"resolve\";\nimport { init, parse } from \"es-module-lexer\";\nimport { normallizePath as normalizePath } from \"../utils\";\nimport fs from \"fs-extra\";\nimport path from \"path\";\n\nexport function preBundlePlugin(deps: Set<string>): Plugin {\n\treturn {\n\t\tname: 'esbuild\"pre-bundle',\n\t\tsetup(build) {\n\t\t\tbuild.onResolve({ filter: BARE_IMPORT_RE }, (resolveInfo) => {\n\t\t\t\tconst { path: id, importer } = resolveInfo;\n\t\t\t\tconst isEntry = !importer; //ÊòØÂÖ•Âè£Êñá‰ª∂\n\n\t\t\t\tconsole.log(\"preBundlePlugin id: \", id);\n\t\t\t\tif (deps.has(id)) {\n\t\t\t\t\treturn isEntry\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tpath: id,\n\t\t\t\t\t\t\t\t// Ê†áËÆ∞ÂÖ•Âè£\n\t\t\t\t\t\t\t\tnamespace: \"dep\",\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t// Â¶ÇÊûú‰∏çÊòØÂÖ•Âè£ÔºåÂ∞±ÂèØ‰ª•Ëé∑ÂèñÁªùÂØπË∑ØÂæÑ\n\t\t\t\t\t\t\t\tpath: resolve.sync(id, { basedir: process.cwd() }),\n\t\t\t\t\t\t  };\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// loadÁöÑ‰ΩúÁî®‰ºº‰πéÊòØÂ∞ÜÊï¥‰∏™reactÂ∫ìÔºåÁî®esmÁöÑÊñπÂºèÂä†ËΩΩËøõ.m-vite\n\t\t\t// Áõ∏ÂΩì‰∫é‰ΩøÁî®ËôöÊãüÊ®°ÂùóÔºåÂ∞ÜreactÂ∫ìÂä†ËΩΩËøõ.m-vite\n\t\t\t//load bare import\n\t\t\tbuild.onLoad({ filter: /.*/, namespace: \"dep\" }, async (loadInfo) => {\n\t\t\t\tawait init;\n\t\t\t\tconst id = loadInfo.path;\n\t\t\t\tconst root = process.cwd();\n\t\t\t\t// Ëé∑ÂèñÁªùÂØπË∑ØÂæÑ,ÈÄöËøáÊä•ÂêçËé∑ÂæóÁªùÂØπË∑ØÂæÑ\n\t\t\t\tconst entryPath = normalizePath(resolve.sync(id, { basedir: root }));\n\t\t\t\tconst code = await fs.readFile(entryPath, \"utf-8\");\n\t\t\t\tconst [imports, exports] = await parse(code);\n\t\t\t\tlet proxyModule = [];\n\t\t\t\tif (!imports.length && !exports.length) {\n\t\t\t\t\t// commonjs module\n\t\t\t\t\t// commonjsËΩ¨esmÁöÑÂéüÂõ†ÊòØÔºåÊµèËßàÂô®Âè™ËÉΩËÆ§ËØÜesm\n\t\t\t\t\tconst res = require(entryPath);\n\t\t\t\t\tconst specifiers = Object.keys(res); // Ëé∑ÂæóexportsÊâÄÊúâÁöÑkey\n\t\t\t\t\tproxyModule.push(\n\t\t\t\t\t\t`export { ${specifiers.join(\",\")} } from \"${entryPath}\"`,\n\t\t\t\t\t\t`export default require(\"${entryPath}\")`, // lazy load\n\t\t\t\t\t\t\"const zenos = 'just for test'\"\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// esm module\n\t\t\t\t\tif (exports.includes(\"default\" as any)) {\n\t\t\t\t\t\tproxyModule.push(`import d from \"${entryPath}\"; export default d`);\n\t\t\t\t\t}\n\t\t\t\t\tproxyModule.push(`export * from \"${entryPath}\"`);\n\t\t\t\t}\n\n\t\t\t\tconst loader = path.extname(entryPath).slice(1);\n\t\t\t\treturn {\n\t\t\t\t\tloader: loader as Loader,\n\t\t\t\t\tcontents: proxyModule.join(\"\\n\"),\n\t\t\t\t\tresolveDir: root,\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t};\n}\n","import os from \"os\";\nimport path from \"path\";\nexport function slash(p: string) {\n\treturn p.replace(/\\\\/g, \"/\"); //Â∞ÜÊñúÊù†ÂèòÊàêÂèçÊñúÊù†\n}\n\nexport const isWindows = os.platform() === \"win32\";\n\nexport function normallizePath(id: string): string {\n\t// Â∞ÜË∑ØÂæÑËßÑËåÉÂåñÔºå‰∏§ÁÇπÔºåÂèåÊñúÊù†‰ºöÂèòÊàêÂçïÊñúÊù†Á≠âÁ≠â\n\treturn path.posix.normalize(isWindows ? slash(id) : id);\n}\n"],"mappings":"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","names":["picocolors","path","build","path","path","build","path","path","picocolors"]}